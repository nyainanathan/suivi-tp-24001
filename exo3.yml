openapi: 3.0.3
info:
  title: API exercice 3
  version: 1.0.0
servers:
  - url: http://localhost:8000
paths:
  /tasks:
    get:
      responses:
        '200':
          description: Return all the tasks to the user
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Task'
                example: [
                  {
                    "id": 1,
                    "title": "faire les courses",
                    "completed": false
                  },
                  {
                    "id": 2,
                    "title": "faire n'importe quoi",
                    "completed": true
                  }
                ]
    post:
      requestBody:
        description: an array containing the new set of tasks to add to the list of tasks
        required: true
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/Task'
      responses:
        '201':
          description: It returns the set of new tasks
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Task'
              example:
                [
                  {
                    "id": 1,
                    "title": "faire les courses",
                    "completed": false
                  },
                  {
                    "id": 2,
                    "title": "faire n'importe quoi",
                    "completed": true
                  }
                ]
    delete:
      requestBody:
        description: A list of id that we are going to delete one by one
        required: true
        content:
          application/json:
            schema:
              type: array
              items:
                type: integer
                example: [ 1, 3, 6 ]
      responses:
        '200':
          description: The tasks we have just deleted
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Task'
  /tasks/{id}:
    get:
      parameters:
        - name: id
          in: path
          description: The id of the todo to return to the user
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: The tasks that is going to be retrieved
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Task'
              example:
                {
                  "id": 1,
                  "title": "Faire les courses",
                  "completed": false
                }
        '404':
          description: Task not found, the ID does not match to a single task
          content:
            plain/text:
              example: Task not found
    delete:
      parameters:
        - name: id
          in: path
          description: The id of the task you want to delete
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Deleting a task by its id
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Task'
              example:
                {
                  "id": 1,
                  "title": "Faire les courses",
                  "completed": false
                }

components:
  schemas:
    Task:
      type: object
      required:
        - id
        - title
        - completed
      properties:
        id:
          type: integer
          minimum: 1
          description: Id of the task
        title:
          type: string
          description: title of the task
        completed:
          type: boolean
          description: status of the task